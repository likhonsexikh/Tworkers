from agent.utils import log_action, log_error, save_file
import os

WEBSITES_DIR = os.path.join(os.path.dirname(__file__), '..', '..', 'websites')

def generate_static_website(description: str, dirname: str) -> str:
    """
    Generates a static website (HTML/CSS/JS) for a given description and saves it.

    Args:
        description: A description of the website to generate.
        dirname: The name of the directory to store the website files (e.g., 'my-portfolio').

    Returns:
        A message indicating success or failure.
    """
    log_action(f"Received task to generate website '{dirname}' for: {description}")

    # This is a placeholder for the actual LLM call.
    # In a real implementation, you would use an LLM to generate the HTML, CSS, and JS.
    html_content = f"""
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{dirname}</title>
    <style>
        body {{ font-family: sans-serif; text-align: center; padding: 40px; }}
        h1 {{ color: #333; }}
    </style>
</head>
<body>
    <h1>{dirname}</h1>
    <p>{description}</p>
    <p><em>Auto-generated by Tworkers Agent</em></p>
</body>
</html>
"""
    site_dir = os.path.join(WEBSITES_DIR, dirname)
    filepath = os.path.join(site_dir, 'index.html')

    if save_file(filepath, html_content):
        return f"Successfully generated and saved website to {filepath}"
    else:
        log_error(f"Failed to save website: {filepath}")
        return f"Error: Failed to generate or save website to {filepath}"
